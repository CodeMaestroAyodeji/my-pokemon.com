{"version":3,"file":"static/js/148.a3e862a4.chunk.js","mappings":"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","sources":["components/Poke.js","components/PokemonList/PokemonList.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport './Poke.css';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst Poke = ({ url, color }) => {\r\n  const [pokemon, setPokemon] = useState(null);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    setIsLoading(true);\r\n    axios\r\n      .get(url)\r\n      .then((res) => {\r\n        setPokemon(res.data);\r\n        setIsLoading(false);\r\n      })\r\n      .catch((error) => {\r\n        console.error('Error fetching data:', error);\r\n        setIsLoading(false);\r\n      });\r\n  }, [url]);\r\n\r\n  if (isLoading) {\r\n    return <div>Loading...</div>;\r\n  }\r\n\r\n  // Check if the Pokemon data is fetched successfully\r\n  if (!pokemon) {\r\n    return <div>Error fetching Pokemon data</div>;\r\n  }\r\n\r\n  \r\n  return (\r\n    <Link to={`/pokemon/${pokemon.name}`} className=\"pokemon-link\">\r\n      <div className=\"pokemon-card\" style={{ background: color }}>\r\n        {/* Display Pokemon details */}\r\n        <img src={pokemon.sprites.front_default} alt={pokemon.name} />\r\n        <h3>{pokemon.name}</h3>\r\n        <p>Height: {pokemon.height / 10} m</p>\r\n        <p>Weight: {pokemon.weight / 10} kg</p>\r\n        <p>Types: {pokemon.types.map((type) => type.type.name).join(', ')}</p>\r\n      </div>\r\n    </Link>\r\n  );\r\n};\r\n\r\nexport default Poke;\r\n","import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport Poke from '../Poke';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst PokemonList = () => {\r\n  const [pokes, setPokes] = useState([]);\r\n  const [filteredPokes, setFilteredPokes] = useState([]);\r\n  const [url, setUrl] = useState('https://pokeapi.co/api/v2/pokemon/');\r\n  const [prevPage, setPrevPage] = useState();\r\n  const [nextPage, setNextPage] = useState();\r\n  const [isLoading, setIsLoading] = useState(true);\r\n\r\n  // Function to generate random background color\r\n  const getRandomColor = () => {\r\n    const letters = '0123456789ABCDEF';\r\n    let color = '#';\r\n    for (let i = 0; i < 6; i++) {\r\n      color += letters[Math.floor(Math.random() * 16)];\r\n    }\r\n    return color;\r\n  };\r\n\r\n  useEffect(() => {\r\n    setIsLoading(true);\r\n    axios\r\n      .get(url)\r\n      .then((res) => {\r\n        setPokes(res.data.results);\r\n        setPrevPage(res.data.previous);\r\n        setNextPage(res.data.next);\r\n        setIsLoading(false);\r\n      })\r\n      .catch((error) => {\r\n        console.error('Error fetching data:', error);\r\n        setIsLoading(false);\r\n      });\r\n  }, [url]);\r\n\r\n  const handleSearch = (event) => {\r\n    const searchQuery = event.target.value.toLowerCase();\r\n    const filteredPokes = pokes.filter((poke) =>\r\n      poke.name.toLowerCase().includes(searchQuery)\r\n    );\r\n    setFilteredPokes(filteredPokes);\r\n  };\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"container ser navbar\">\r\n        <div className=\"ser col-4 justify-item-center\">\r\n          <form className=\"d-flex\" role=\"search\">          \r\n            <input className=\"form-control me-2\" type=\"search\" placeholder=\"Search a Pokemon\" aria-label=\"Search\" onChange={handleSearch} />\r\n          </form>\r\n        </div>\r\n      </div>\r\n      {isLoading ? (\r\n        <div>Loading...</div>\r\n      ) : (\r\n        <>\r\n          <section className=\"card-list\">\r\n            {filteredPokes.length > 0\r\n              ? filteredPokes.map((poke) => (\r\n                  <Link\r\n                    className=\"pokemon-link text-capitalize\"\r\n                    key={poke.name}\r\n                    to={`/pokemon/${poke.name}`}\r\n                  >\r\n                    <Poke url={poke.url} color={getRandomColor()} />\r\n                  </Link>\r\n                ))\r\n              : pokes.map((poke) => (\r\n                  <Link\r\n                    className=\"pokemon-link text-capitalize\"\r\n                    key={poke.name}\r\n                    to={`/pokemon/${poke.name}`}\r\n                  >\r\n                    <Poke url={poke.url} color={getRandomColor()} />\r\n                  </Link>\r\n                ))}\r\n          </section>\r\n          <div>\r\n            <button\r\n              className=\"prev-btn btn btn-primary\"\r\n              disabled={!prevPage}\r\n              onClick={() => setUrl(prevPage)}\r\n            >\r\n              Back\r\n            </button>\r\n            <button\r\n              className=\"next-btn btn btn-primary\"\r\n              disabled={!nextPage}\r\n              onClick={() => setUrl(nextPage)}\r\n            >\r\n              Next\r\n            </button>\r\n          </div>\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PokemonList;\r\n"],"names":["_ref","url","color","_useState","useState","_useState2","_slicedToArray","pokemon","setPokemon","_useState3","_useState4","isLoading","setIsLoading","useEffect","axios","get","then","res","data","catch","error","console","_jsx","children","Link","to","concat","name","className","_jsxs","style","background","src","sprites","front_default","alt","height","weight","types","map","type","join","pokes","setPokes","filteredPokes","setFilteredPokes","_useState5","_useState6","setUrl","_useState7","_useState8","prevPage","setPrevPage","_useState9","_useState10","nextPage","setNextPage","_useState11","_useState12","getRandomColor","i","Math","floor","random","results","previous","next","role","placeholder","onChange","event","searchQuery","target","value","toLowerCase","filter","poke","includes","_Fragment","length","Poke","disabled","onClick"],"sourceRoot":""}